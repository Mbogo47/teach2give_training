1. We make, not to have, but to know. - Anthony Muuo

2. It’s the developers misunderstanding, not the expert knowledge, that gets released in production - Zio Brado

3. The key to performance is elegance, not battalions of special cases. - Jon Bently

4. It is not usually until you’ve built and used a version of the program that you understand the issues well enough to get the design right. - Pike

5. Fools ignore complexity. Pragmatists suffer it. Some can avoid it. Geniuses remove it. - Alan Perlis

6. The best performance improvement is the transition from the nonworking state to the working state. - John Ousterhuant

7. You don’t pay engineers to write code, you pay them to understand subtleties and edges of the problem. The code is incidental - Dozda

8. Scope doesn’t creep, understanding grows - Jeff Paton

9. Testing leads to failure, and failure leads to understanding. - Rutan

10. The art of debugging is figuring out what you really told your program to do rather than what you thought you told it to do. - Andrew Singer

11. If it’s your decision, it’s design; if not, it’s a requirement. - Alistair Cockburn

12. I’m not a great programmer. I’m just a good programmer with great habits. - Kent Bently

13. Make it correct, make it clear, make it concise, make it fast. In that order. - Wes Dyer

14. The hardest bugs are those where your mental model of the situation is just wrong, so you can’t see the problem at all. - Brian Kernighan

15. As a rule, software systems do not work well until they have been used, and have failed repeatedly, in real applications. - Dave Parnas

16. Optimism is an occupational hazard of programming; feedback is the treatment. - Kent Beck

17. The plural of regex is regrets - Steve

18. What one programmer can do in one month, two programmers can do in two months. - Fred Brooks(maybe)

19. Do; or do not. There is no //TODO - Irene

20. A group of wolves is called a pack.
    A group of crows is called a murder.
    A group of developers is called a merge conflict. - Benjamin